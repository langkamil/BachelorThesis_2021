summary(properties)
glimpse(properties)
sumarise
mlr::sumarizeColumns(properties)
library(mlr)
mlr::sumarizeColumns(properties)
sumarizeColumns(properties)
library(mlr)
library(mlr)
(properties)
sumarizeColumns(properties)
rm(properties)
red_properties = read.csv2("C:\\Users\\Kamil\\Documents\\Baza_przykladow_R\\winequality-red.csv",
header = TRUE, dec = ".")
white_proprerties = read.csv2("C:\\Users\\Kamil\\Documents\\Baza_przykladow_R\\winequality-white.csv",
header = TRUE, dec = ".")
load("C:\\Users\\Kamil\\Documents\\Baza_przykladow_R\\winequality-red.rda")
properties = bind_rows(red_properties,white_proprerties)
save(white_proprerties, file = "C:\\Users\\Kamil\\Documents\\Baza_przykladow_R\\winequality-white.rda")
load("C:\\Users\\Kamil\\Documents\\Baza_przykladow_R\\winequality-white.rda")
#KONWERSJA DO PLKU R-owego
save(red_properties, file = "C:\\Users\\Kamil\\Documents\\Baza_przykladow_R\\winequality-red.rda")
load("C:\\Users\\Kamil\\Documents\\Baza_przykladow_R\\winequality-red.rda")
all_properties = bind_rows(red_properties,white_proprerties)
all_properties = bind_rows(red_properties,white_proprerties)
load("C:\\Users\\Kamil\\Documents\\Baza_przykladow_R\\winequality-white.rda")
save(white_proprerties, file = "C:\\Users\\Kamil\\Documents\\Baza_przykladow_R\\winequality-white.rda")
load("C:\\Users\\Kamil\\Documents\\Baza_przykladow_R\\winequality-red.rda")
#KONWERSJA DO PLKU R-owego
save(red_properties, file = "C:\\Users\\Kamil\\Documents\\Baza_przykladow_R\\winequality-red.rda")
load("C:\\Users\\Kamil\\Documents\\Baza_przykladow_R\\winequality-red.rda")
all_properties = bind_rows(red_properties,white_proprerties)
dim(properties)
View(white_proprerties)
iris
iris
iris
library(gapminder)
install.packages("gapminder")
library(modelr)
library(tidyverse)
library(gapminder)
gapminder
dim(gapminder)
gampminder
gapminder
#badamy jego strukture
str(gapminder)
gampminder = gapminder
View(gampminder)
View(gampminder)
ggplot(gapminder, aes(year, lifeExp, group = country)) + geom_line()
#ograniczamy sie do Polski
pl = filter((gapminder, countr == "Poland"))
#ograniczamy sie do Polski
pl = filter(gapminder, countr == "Poland"))
#ograniczamy sie do Polski
pl = filter(gapminder, countr == "Poland")
#ograniczamy sie do Polski
pl = filter(gapminder, country == "Poland")
View(pl)
View(pl)
ggplot(pl, aes(year,lifeExp)) + geom_line()
help("aes")
ggplot(pl, aes(year,lifeExp)) + geom_line()
ggplot(pl, aes(year,lifeExp)) + geom_line() + geom_point(size = 2.5)
model = tibble(
a1 = runif(5000, -400, 400)
a2 = runif(5000, -1, 1)
)
model = tibble(
a1 = runif(5000, -400, 400)
a2 = runif(5000, -1, 1)
)
help("tibble")
ggplot(pl, ase(year, lifeExp))
ggplot(pl, aes(year, lifeExp))
ggplot(pl, aes(year, lifeExp)) + geom_abline( aes(intercept = a1, slope = a2),
data = models, alpha = 1/2) +
geom_point(size = 2)
ggplot(pl, aes(year, lifeExp)) + geom_abline( aes(intercept = a1, slope = a2),
data = model, alpha = 1/2) +
geom_point(size = 2)
model = tibble(
a1 = runif(5000, -400, 400),
a2 = runif(5000, -1, 1)
)
ggplot(pl, aes(year, lifeExp)) + geom_abline( aes(intercept = a1, slope = a2),
data = model, alpha = 1/2) +
geom_point(size = 2)
ggplot(pl, aes(year, lifeExp)) + geom_abline( aes(intercept = a1, slope = a2),
data = model, alpha = 1/2) +
geom_point(size = 2)
ggplot(pl, aes(year, lifeExp)) + geom_abline( aes(intercept = a1, slope = a2),
data = model, alpha = 1/2) +
geom_point(size = 2)
ggplot(pl, aes(year, lifeExp)) + geom_abline( aes(intercept = a1, slope = a2),
data = model, alpha = 1/2) +
geom_point(size = 2)
model = tibble(
a1 = runif(5000, -400, 400),
a2 = runif(5000, -1, 1)
)
ggplot(pl, aes(year, lifeExp)) + geom_abline( aes(intercept = a1, slope = a2),
data = model, alpha = 1/2) +
geom_point(size = 2)
model = tibble(
a1 = runif(5000, -400, 400),
a2 = runif(5000, -1, 1)
)
ggplot(pl, aes(year, lifeExp)) + geom_abline( aes(intercept = a1, slope = a2),
data = model, alpha = 1/2) +
geom_point(size = 2)
model1(c(-300,0.2), pl)
#arbitralny wybor parametrow
model1 = function(a, data) {
a[1] + data$year * a[2]
}
model1(c(-300,0.2), pl)
model1(c(-300,0.2), pl)
#funkcja kosztu
errors = function(mod, data) {
diff = data$lifeExp - model1(mod, data)
}
errors(c(-300, 0.2), pl)
errors(c(-300, 0.2), pl)
#funkcja kosztu
errors = function(mod, data) {
diff = data$lifeExp - model1(mod, data)
}
errors(c(-300, 0.2), pl)
#funkcja kosztu
errors = function(mod, data) {
diff = data$lifeExp - model1(mod, data)
sqrt(mean(diff^2))
}
errors(c(-300, 0.2), pl)
pl_dist = function(a1, a2) {
errors(c(a1,a2)),pl
}
pl_dist = function(a1, a2) {
errors(c(a1,a2),pl)
}
model = model %>%
mutate(dist = map2_dbl(a1, a2, pl_dist))
model
ggplot(pl, aes(year, lifeExp)) +
geom_point(size = 2) +
geom_abline(aes(intercept = a1, slope = a2, color =-dist), size = 1.1)
data = filter(model, rank(dist) <20)
ggplot(pl, aes(year, lifeExp)) +
geom_point(size = 2) +
geom_abline(aes(intercept = a1, slope = a2, color =-dist), size = 1.1,
data = filter(model, rank(dist) <20))
x <- 2
x <- 2
x <- 3
rm(x)
setwd("C:\\Users\\Kamil\\Documents\\Baza_przykladow_R\\szeliga_model_regresji")
ggplot(pl, aes(year, lifeExp)) +
geom_point(size = 2) +
geom_abline(aes(intercept = a1, slope = a2, color =-dist), size = 1.1,
data = filter(model, rank(dist) <20))
library(modelr)
library(tidyverse)
library(gapminder)
ggplot(pl, aes(year, lifeExp)) +
geom_point(size = 2) +
geom_abline(aes(intercept = a1, slope = a2, color =-dist), size = 1.1,
data = filter(model, rank(dist) <20))
ggplot(model, aes(a1,a2)) +
geom_point(data = filter(model, rank(dist)<20),
size = 4 , color = "red", fill = "red")
ggplot(model, aes(a1,a2)) +
geom_point(data = filter(model, rank(dist)<20),
size = 4 , color = "red", fill = "red") =
ggplot(model, aes(a1,a2)) +
geom_point(data = filter(model, rank(dist)<20),
size = 4 , color = "red", fill = "red") +
geom_point(aes(color = -dist), alpha = 1/4)
ggplot(model, aes(a1,a2)) +
geom_point(data = filter(model, rank(dist)<20),
size = 4 , color = "red", fill = "red") +
geom_point(aes(color = -dist), alpha = 1/4)
# Metoda siatki -----------------------------------------------------------
?expand.grid
# Metoda siatki -----------------------------------------------------------
?seq
# Metoda siatki -----------------------------------------------------------
?%>%
grid = expand.grid(
a1 = seq(-400, 400, length = 30),
a2 = seq(-0.35, 0.35, length = 30 )
) %>%
mutate
# Metoda siatki -----------------------------------------------------------
?%>%
grid = expand.grid(
a1 = seq(-400, 400, length = 30),
a2 = seq(-0.35, 0.35, length = 30 )
) %>%
mutate
# Metoda siatki -----------------------------------------------------------
help("%>%")
grid = expand.grid(
a1 = seq(-400, 400, length = 30),
a2 = seq(-0.35, 0.35, length = 30 )
) %>%
mutate(dist = map2_dbl(a1, a2, pl_dist))
grid = expand.grid(
a1 = seq(-400, 400, length = 30),
a2 = seq(-0.35, 0.35, length = 30 )
) %>%
mutate(dist = map2_dbl(a1, a2, pl_dist))
View(grid)
View(grid)
View(pl_dist)
View(pl_dist)
# Metoda siatki -----------------------------------------------------------
?ggplot
grid %>%
ggplot( aes(a1, a2)) +
geom_point(data = filter(grid, rank( dist) <20),
size = 4, colour = "red") +
geom_point(aes( color = -dist))
best = optim(c(0,0), errors, data = pl)
View(best)
View(best)
# metoda stycznych / Newtona-Raphsona   -----------------------------------
?optim
best$par
grid_pl = pl %>%
data_grid(year)
ggplot(pl, aes(year, lifeExp)) +
geom_point(size = 2) +
geom_line(aes(y=pred), data = best$par, color = "red", size(1.5))
ggplot(pl, aes(year, lifeExp)) +
geom_point(size = 2) +
geom_line(aes(y=pred), data = best$par, color = "red", size = 1.5)
ggplot(pl, aes(year, lifeExp)) +
geom_point(size = 2) +
geom_line(aes(y=pred), data = best$par, color = "red", size = 1.5)
?geom_line
ggplot(pl, aes(year, lifeExp)) +
geom_point(size = 2) +
geom_abline( aes(intercept = best$par[1], slope = best$par[2]),
data = model, alpha = 1/2)
?geom_abline
ggplot(pl, aes(year, lifeExp)) +
geom_point(size = 2) +
geom_abline( aes(intercept = best$par[1], slope = best$par[2]),
data = model, alpha = 1/2)
ggplot(filter(gapm, country == "Germany"), aes(year,lifeExp)) + geom_point(size = 3, colour = 'red')
library(gapminder)
# library(modelr)
library(tidyverse)
#sprawdzamy wymiar datasetu wbudowanego w gapminder
gapm = gapminder
ggplot(filter(gapm, country == "Germany"), aes(year,lifeExp)) + geom_point(size = 3, colour = 'red')
ggplot(filter(gapm, country == "Japan"), aes(year,lifeExp)) + geom_point(size = 3, colour = 'red')
ggplot(filter(gapm, country == "Russia"), aes(year,lifeExp)) + geom_point(size = 3, colour = 'red')
ggplot(filter(gapm, country == "USA"), aes(year,lifeExp)) + geom_point(size = 3, colour = 'red')
View(gampminder)
View(gampminder)
ggplot(filter(gapm, country == "USA"), aes(year,gdpPercap)) + geom_point(size = 3, colour = 'red')
ggplot(filter(gapm, country == "Poland"), aes(year,gdpPercap)) + geom_point(size = 3, colour = 'red')
ggplot(filter(gapm, country == "Poland"), aes(gdpPercap,lifeExp)) + geom_point(size = 3, colour = 'red')
ggplot(filter(gapm, country == "Germany"), aes(gdpPercap,lifeExp)) + geom_point(size = 3, colour = 'red')
library(gapminder)
library(caret)
library(modelr)
library(tidyverse)
?gapminder
#sprawdzamy wymiar datasetu wbudowanego w gapminder
dane <- gapminder
#badamy jego strukture
str(dane)
#wyswietlamy wykres zaleznosci dlugosci zycia od roku badania
ggplot(dane, aes(year, lifeExp, group = country)) + geom_line()
?filter
#ograniczamy sie do Polski
jap <- filter (dane, country == 'Japan') #tidyverse
ggplot(jap, aes(year,lifeExp)) + geom_point(size = 3, colour = 'red')
# TUTAJ ZROBIC METODE NAJMNIEJSZYCH KWADRATOW
param  = lsfit(jap$year, jap$lifeExp)
param$coefficients
ggplot(jap, aes(year, lifeExp)) +
geom_point(size = 3, colour = 'red') +
geom_abline( aes(intercept = param$coefficients[1], slope = param$coefficients[2]),
colour = 'blue', size = 1)
param$coefficients
# install.packages("OneR")
library(OneR)
library(caret)
dane = breastcancer
dane <- data.frame(sapply(dane, as.factor))
summary(dane)
str(dane)
podzial <- createDataPartition(dane$Class, p = 0.60, list = FALSE)
trening <- dane[podzial, ]
'test <- dane[-podzial, ]
model <- train(Class ~ Clump.Thickness + Uniformity.of.Cell.Size
+ Uniformity.of.Cell.Shape + Single.Epithelial.Cell.Size,
data = trening, method = "glm",
family = "binomial")
predykcja <- predict(model, test[, -10])
table(predykcja, test[, 10])
eval_model(prediction = predykcja, test)
?eval_model
?train
'test <- dane[-podzial, ]
model <- train(Class ~ Clump.Thickness + Uniformity.of.Cell.Size
+ Uniformity.of.Cell.Shape + Single.Epithelial.Cell.Size,
data = trening, method = "glm",
family = "binomial")
predykcja <- predict(model, test[, -10])
table(predykcja, test[, 10])
eval_model(prediction = predykcja, test)
?eval_model
?train
test <- dane[-podzial, ]
model <- train(Class ~ Clump.Thickness + Uniformity.of.Cell.Size
+ Uniformity.of.Cell.Shape + Single.Epithelial.Cell.Size,
data = trening, method = "glm",
family = "binomial")
predykcja <- predict(model, test[, -10])
table(predykcja, test[, 10])
eval_model(prediction = predykcja, test)
?eval_model
?train
View(trening)
View(test)
View(podzial)
View(podzial)
eval_model(prediction = model, trening)
View(dane)
eval_model(prediction = predykcja, test)
library(BBmisc)
library(caret)
library(OneR)
dane = iris
# dane <- data.frame(sapply(dane, as.factor))
head(dane)
tail(dane)
str(dane)
summary(dane)
# Iris scatter plot
ggplot(data = iris, aes(x = Sepal.Length, y = Sepal.Width, col = Species)) +
geom_point()
ggplot(data = iris, aes(x = Petal.Length, y = Petal.Width, col = Species)) +
geom_point()
dane_norm = normalize(dane, method = "range", range = c(0,1))
podzial <- createDataPartition(dane_norm$Species, p=0.75, list=FALSE)
# Subset training set with index
trening <- dane_norm[podzial,]
# Subset test set with index
test <- dane_norm[-podzial,]
model <- train(trening[, 1:4], trening[, 5],   method = 'knn')
model
# Predict the labels of the test set
predykcja <- predict.train(object = model, test[,1:4], type="raw")
table(predykcja, test$Species)
eval_model(test$Species, predykcja)
View(dane)
View(dane)
library(gapminder)
#sprawdzamy wymiar datasetu wbudowanego w gapminder
dane <- gapminder
#badamy jego strukture
str(dane)
#wyswietlamy wykres zaleznosci dlugosci zycia od roku badania
ggplot(dane, aes(year, lifeExp, group = country)) + geom_line()
library(caret)
#wyswietlamy wykres zaleznosci dlugosci zycia od roku badania
ggplot(dane, aes(year, lifeExp, group = country)) + geom_line()
#ograniczamy sie do Polski
jap <- filter (dane, country == 'Japan') #tidyverse
library(tidyverse)
#ograniczamy sie do Polski
jap <- filter (dane, country == 'Japan') #tidyverse
ggplot(jap, aes(year,lifeExp)) + geom_point(size = 3, colour = 'red')
# TUTAJ ZROBIC METODE NAJMNIEJSZYCH KWADRATOW
param  = lsfit(jap$year, jap$lifeExp)
param$coefficients
ggplot(jap, aes(year, lifeExp)) +
geom_point(size = 3, colour = 'red') +
geom_abline( aes(intercept = param$coefficients[1], slope = param$coefficients[2]),
colour = 'blue', size = 1)
ggplot(jap, aes(year, lifeExp)) +
geom_point(size = 3, colour = 'red') +
geom_abline( aes(intercept = param$coefficients[1], slope = param$coefficients[2]),
colour = 'blue', size = 1)
mod <- lm(formula = lifeExp ~year, data = dane)
View(mod)
coef(summary(mod))
View(mod)
param$coefficients
coef(summary(mod))
mod$coefficients[1]
ggplot(jap, aes(year, lifeExp)) +
geom_point(size = 3, colour = 'red') +
geom_abline( aes(intercept = mod$coefficients[1]
, slope = mod$coefficients[2]
),
colour = 'blue', size = 1)
ggplot(jap, aes(year, lifeExp)) +
geom_point(size = 3, colour = 'red') +
geom_abline( aes(intercept = mod$coefficients[1]
, slope = mod$coefficients[2]
),
colour = 'blue', size = 1)
mod <- lm(formula = lifeExp ~ year, data = jap)
coef(summary(mod))
mod$coefficients[1]
ggplot(jap, aes(year, lifeExp)) +
geom_point(size = 3, colour = 'red') +
geom_abline( aes(intercept = mod$coefficients[1]
, slope = mod$coefficients[2]
),
colour = 'blue', size = 1)
?lm
ggplot(jap, aes(year, lifeExp)) +
geom_point(size = 3, colour = 'red') +
geom_abline( aes(intercept = mod$coefficients[1]
, slope = mod$coefficients[2]
),
colour = 'blue', size = 1)
setwd("C:\\Users\\Kamil\\Documents\\licencjat_literatura\\Przykłady_licencjat")
library(gapminder)
library(caret)
library(tidyverse)
dane <- gapminder
head(dane)
str(dane)
summary(dane)
# wybieramy Japonie jako kraj do analizy
jap <- filter (dane, country == 'Japan') #tidyverse
ggplot(jap, aes(year,lifeExp)) + geom_point(size = 3, colour = 'red')
?lm
mod <- lm(formula = lifeExp ~ year, data = jap)
mod <- lm(formula = lifeExp ~ year, data = jap)
coef(summary(mod))
mod$coefficients[1]
ggplot(jap, aes(year, lifeExp)) +
geom_point(size = 3, colour = 'red') +
geom_abline( aes(intercept = mod$coefficients[1]
, slope = mod$coefficients[2]
),
colour = 'blue', size = 1)
+ geom_abline( aes(intercept = mod$coefficients[1], slope = mod$coefficients[2])
, colour = 'blue', size = 1)
+ geom_abline( aes(intercept = mod$coefficients[1], slope = mod$coefficients[2])
, colour = 'blue', size = 1)
ggplot(jap, aes(year, lifeExp)) +   geom_point(size = 3, colour = 'red') +
geom_abline( aes(intercept = mod$coefficients[1], slope = mod$coefficients[2]),
colour = 'blue', size = 1)
ggplot(jap, aes(year, lifeExp)) +   geom_point(size = 3, colour = 'red') +
geom_abline( aes(intercept = mod$coefficients[1], slope = mod$coefficients[2]),
colour = 'blue', size = 1)
head(dane)
str(dane)
summary(dane)
tail(dane)
str(dane)
summary(dane)
head(dane)
str(dane)
summary(dane)
# wybieramy Japonie jako kraj do analizy
jap <- filter (dane, country == 'Japan')
ggplot(jap, aes(year,lifeExp)) + geom_point(size = 3, colour = 'red')
setwd("C:\\Users\\Kamil\\Documents\\licencjat_literatura\\Przykłady_licencjat\\RegresjaLiniowa")
?lm
coef(mod)
ggplot(jap, aes(year, lifeExp)) +   geom_point(size = 3, colour = 'red') +
geom_abline( aes(intercept = mod$coefficients[1], slope = mod$coefficients[2]),
colour = 'blue', size = 1)
library(gapminder)
library(caret)
library(tidyverse)
dane <- gapminder
head(dane)
str(dane)
summary(dane)
# wyswietlamy wykres zaleznosci dlugosci zycia od roku badania
ggplot(dane, aes(year, lifeExp, group = country)) + geom_line()
# wybieramy Japonie jako kraj do analizy
jap <- filter (dane, country == 'Japan')
ggplot(jap, aes(year,lifeExp)) + geom_point(size = 3, colour = 'red')
?lm
model <- lm(formula = lifeExp ~ year, data = jap)
coef(model)
ggplot(jap, aes(year, lifeExp)) +   geom_point(size = 3, colour = 'red') +
geom_abline( aes(intercept = model$coefficients[1], slope = model$coefficients[2]),
colour = 'blue', size = 1)
residuals(model)
library(gapminder)
library(caret)
library(tidyverse)
dane <- gapminder
head(dane)
str(dane)
summary(dane)
ggplot(dane, aes(year, lifeExp, group = country)) + geom_line()
jap <- filter (dane, country == 'Japan')
ggplot(jap, aes(year,lifeExp)) + geom_point(size = 3, colour = 'red')
model <- lm(formula = lifeExp ~ year, data = jap)
coef(model)
ggplot(jap, aes(year, lifeExp)) +   geom_point(size = 3, colour = 'red') +
geom_abline( aes(intercept = model$coefficients[1], slope = model$coefficients[2]),
colour = 'blue', size = 1)
residuals(model)
