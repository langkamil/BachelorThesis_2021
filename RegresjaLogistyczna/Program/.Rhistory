# install.packages("OneR")
library(OneR)
library(caret)
dane = breastcancer
View(dane)
View(dane)
summary(dane)
Train <- createDataPartition(dane$Class, p = 0.60, list = FALSE)
training <- dane[Train, ]
testing <- dane[-Train, ]
mod_fit <- train(Class ~ `Clump Thickness` + `Uniformity of Cell Size`
+ `Uniformity of Cell Shape` ,
data = training, method = "LogitBoost",
family = "binomial")
predictions <- predict(mod_fit, testing[, -10])
eval_model(prediction = predictions, testing)
table(predictions, testing[, 10])
predictions <- predict(mod_fit, testing[, -9])
eval_model(prediction = predictions, testing)
table(predictions, testing[, 9])
dane = breastcancer
?breastcancer
summary(dane)
Train <- createDataPartition(dane$Class, p = 0.60, list = FALSE)
training <- dane[Train, ]
testing <- dane[-Train, ]
mod_fit <- train(Class ~ `Clump Thickness` + `Uniformity of Cell Size`
+ `Uniformity of Cell Shape` ,
data = training, method = "LogitBoost",
family = "binomial")
predictions <- predict(mod_fit, testing[, -10])
eval_model(prediction = predictions, testing)
table(predictions, testing[, 10])
mod_fit <- train(Class ~ `Clump Thickness` + `Uniformity of Cell Size`
+ `Uniformity of Cell Shape` ,
data = training, method = "glm",
family = "binomial")
predictions <- predict(mod_fit, testing[, -10])
eval_model(prediction = predictions, testing)
table(predictions, testing[, 10])
summary(dane)
?breastcancer
str(dane)
?eval_model
eval_model(prediction = predictions, testing)
table(predictions, testing[, 10])
summary(dane)
View(dane)
View(dane)
head(dane)
str(dane)
# install.packages("OneR")
library(OneR)
library(caret)
dane = breastcancer
summary(dane)
str(dane)
dane = breastcancer
summary(dane)
str(dane)
podzial <- createDataPartition(dane$Class, p = 0.60, list = FALSE)
trening <- dane[podzial, ]
test <- dane[-podzial, ]
model <- train(Class ~ `Clump Thickness` + `Uniformity of Cell Size`
+ `Uniformity of Cell Shape` ,
data = trening, method = "glm",
family = "binomial")
predykcja <- predict(mod_fit, test[, -10])
predykcja <- predict(model, test[, -10])
eval_model(prediction = predictions, test)
eval_model(prediction = predykcja, test)
table(predykcja, test[, 10])
?eval_model
table(predykcja, test[, 10])
View(dane)
View(dane)
model <- train(Class ~ `Clump Thickness` + `Uniformity of Cell Size`
+ `Uniformity of Cell Shape` + `Single Epithelial Cell Size` ,
data = trening, method = "glm",
family = "binomial")
predykcja <- predict(model, test[, -10])
eval_model(prediction = predykcja, test)
table(predykcja, test[, 10])
?train
table(predykcja, test[, 10])
eval_model(prediction = predykcja, test)
dane <- breastcancer
library(OneR)
dane <- breastcancer
dane <- data.frame(sapply(dane, as.factor))
View(dane)
summary(dane)
str(dane)
dane <- breastcancer
summary(dane)
str(dane)
str(dane)
summary(dane)
podzial <- createDataPartition(dane$Class, p = 0.60, list = FALSE)
library(caret)
podzial <- createDataPartition(dane$Class, p = 0.60, list = FALSE)
trening <- dane[podzial, ]
test <- dane[-podzial, ]
model <- train(Class ~ Clump.Thickness + Uniformity.of.Cell.Size
+ Uniformity.of.Cell.Shape + Single.Epithelial.Cell.Size,
data = trening, method = "glm",
family = "binomial")
predykcja <- predict(model, test[, -10])
table(predykcja, test[, 10])
eval_model(prediction = predykcja, test)
?eval_model
model <- train(Class ~ 'Clump.Thickness' + Uniformity.of.Cell.Size
+ Uniformity.of.Cell.Shape + Single.Epithelial.Cell.Size,
data = trening, method = "glm",
family = "binomial")
dane <- data.frame(sapply(dane, as.factor))
str(dane)
summary(dane)
podzial <- createDataPartition(dane$Class, p = 0.60, list = FALSE)
trening <- dane[podzial, ]
test <- dane[-podzial, ]
model <- train(Class ~ Clump.Thickness + Uniformity.of.Cell.Size
+ Uniformity.of.Cell.Shape + Single.Epithelial.Cell.Size,
data = trening, method = "glm",
family = "binomial")
predykcja <- predict(model, test[, -10])
table(predykcja, test[, 10])
eval_model(prediction = predykcja, test)
?eval_model
predykcja <- predict(model, test[, -10])
model <- train(Class ~ Clump.Thickness + Uniformity.of.Cell.Size
+ Uniformity.of.Cell.Shape + Single.Epithelial.Cell.Size,
data = trening, method = "glm",
family = "binomial")
predykcja <- predict(model, test[, -10])
table(predykcja, test[, 10])
predykcja <- predict(model, test[, -10])
model <- train(Class ~ .,
data = trening, method = "glm",
family = "binomial")
dane <- breastcancer
summary(dane)
podzial <- createDataPartition(dane$Class, p = 0.60, list = FALSE)
trening <- dane[podzial, ]
test <- dane[-podzial, ]
model <- train(Class ~ Clump.Thickness + Uniformity.of.Cell.Size
+ Uniformity.of.Cell.Shape + Single.Epithelial.Cell.Size,
data = trening, method = "glm",
family = "binomial")
model <- train(Class ~ `Clump Thickness` + `Uniformity of Cell Size`+ `Uniformity of Cell Shape`
+ `Single Epithelial Cell Size` ,data = trening, method = "glm", family = "binomial")
predykcja <- predict(model, test[, -10])
table(predykcja, test[, 10])
eval_model(prediction = predykcja, test)
dane <- data.frame(sapply(dane$Class, as.factor))
str(dane)
summary(dane)
podzial <- createDataPartition(dane$Class, p = 0.60, list = FALSE)
trening <- dane[podzial, ]
test <- dane[-podzial, ]
model <- train(Class ~ `Clump Thickness` + `Uniformity of Cell Size`+ `Uniformity of Cell Shape`
+ `Single Epithelial Cell Size` ,data = trening, method = "glm", family = "binomial")
predykcja <- predict(model, test[, -10])
table(predykcja, test[, 10])
eval_model(prediction = predykcja, test)
?eval_model
?train
library(OneR)
library(caret)
dane <- breastcancer
str(dane)
summary(dane)
podzial <- createDataPartition(dane$Class, p = 0.60, list = FALSE)
trening <- dane[podzial, ]
test <- dane[-podzial, ]
model <- train(Class ~ `Clump Thickness` + `Uniformity of Cell Size`+ `Uniformity of Cell Shape`
+ `Single Epithelial Cell Size` ,data = trening, method = "glm", family = "binomial")
predykcja <- predict(model, test[, -10])
table(predykcja, test[, 10])
eval_model(prediction = predykcja, test)
library(OneR)
library(caret)
dane <- breastcancer
str(dane)
summary(dane)
podzial <- createDataPartition(dane$Class, p = 0.60, list = FALSE)
trening <- dane[podzial, ]
test <- dane[-podzial, ]
model <- train(Class ~ `Clump Thickness` + `Uniformity of Cell Size`+ `Uniformity of Cell Shape`
+ `Single Epithelial Cell Size` ,data = trening, method = "glm", family = "binomial")
predykcja <- predict(model, test[, -10])
table(predykcja, test[, 10])
eval_model(prediction = predykcja, test)
library(caret)
dane <- breastcancer
setwd("C:\\Users\\Kamil\\Documents\\licencjat\\Przykłady_licencjat\\RegresjaLogistyczna")
library(OneR)
library(caret)
dane <- breastcancer
str(dane)
library(OneR)
library(caret)
dane <- breastcancer
str(dane)
summary(dane)
model <- train(Class ~ . ,data = trening, method = "glm", family = "binomial")
library(OneR)
library(caret)
dane <- breastcancer
str(dane)
summary(dane)
podzial <- createDataPartition(dane$Class, p = 0.60, list = FALSE)
trening <- dane[podzial, ]
test <- dane[-podzial, ]
model <- train(Class ~ `Clump Thickness` + `Uniformity of Cell Size`+ `Uniformity of Cell Shape`
+ `Single Epithelial Cell Size` ,data = trening, method = "glm", family = "binomial")
predykcja <- predict(model, test[, -10])
table(predykcja, test[, 10])
eval_model(prediction = predykcja, test)
?eval_model
?table
library(OneR)
library(caret)
dane <- breastcancer
str(dane)
summary(dane)
podzial <- createDataPartition(dane$Class, p = 0.60, list = FALSE)
trening <- dane[podzial, ]
test <- dane[-podzial, ]
model <- train(Class ~ `Clump Thickness` + `Uniformity of Cell Size`+ `Uniformity of Cell Shape`
+ `Single Epithelial Cell Size` ,data = trening, method = "glm", family = "binomial")
predykcja <- predict(model, test[, -10])
table(predykcja, test[, 10])
eval_model(prediction = predykcja, test)
source('~/licencjat/Przykłady_licencjat/RegresjaLogistyczna/RegresjaLogistyczna.R')
